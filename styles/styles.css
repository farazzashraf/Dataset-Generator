body {
    padding: 0;
    margin: 0;
    font-family: 'Edu TAS Beginner', cursive;
    width: 100%;
    color: white;
    overflow-x: hidden !important;
}

a {
    text-decoration: none;
    color: #ffffff;
    font-weight: bold;
    width: 100%;
}

i {
    font-size: 1rem;
}

.sidebar {
    color: #fff;
    position: fixed;
    height: 100vh;
    border-right: #2d2d2d solid 10px;
    background-color: rgb(0, 0, 0);

    /* float: left; */
    width: 30%;
    padding: 0 2rem;
    box-sizing: border-box;
}

.data-generator {
    position: relative;
    display: flex;
    justify-content: center;
}

.data-generator>h1 {
    text-align: center;
    color: #0074d9;
    font-size: 3rem;
    font-family: 'Edu TAS Beginner', cursive;
    font-weight: 600;
    position: relative;
    display: inline-block;
    white-space: wrap;
    animation: fadeIn 1s ease-in-out forwards, bounce 1s ease-in-out infinite;

}

@keyframes fadeIn {
    0% {
        color: transparent;
        opacity: 0;
    }

    100% {
        color: #0074d9;
        opacity: 1;
    }
}

@keyframes bounce {

    0%,
    100% {
        transform: translateY(0);
    }

    50% {
        transform: translateY(-10px);
    }
}

.sidebar ul {
    display: flex;
    justify-content: space-evenly;
}

.sidebar ul,
.sidebar li {
    list-style: none;
    padding: 0;
    margin: 0;
    /* text-align: center; */
}

.sidebar a {
    font-size: 1.5rem;
    width: fit-content;
    color: #fff;
    text-decoration: none;
    align-items: center;
    transition: background-color 0.3s;
}

.sidebar #options {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.sidebar .options {
    display: none;
    margin: 1rem 0;
    margin-top: 2rem;
    /* padding-left: 20px; */
}

.sidebar li:hover .options,
.sidebar li:focus-within .options {
    display: flex;
    align-items: center;
    gap: .5rem;
}

.sidebar #formatSelection {
    display: flex;
    flex-direction: column;
    align-items: center;
    flex-wrap: wrap;
}

.sidebar #formatSelection .file {
    display: none;
    margin: 1rem 0;
    margin-right: .5rem;
}


.sidebar #formatSelection .file label {
    cursor: pointer;
}

.sidebar #formatSelection .file .container {
    position: relative;
    display: inline-block;
    cursor: pointer;
    text-align: center;
}

/* Show options when File Type is hovered or clicked */
.sidebar #formatSelection:hover .file,
.sidebar #formatSelection:focus-within .file {
    display: flex;
}

.generate-reset {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 2rem;
    margin-top: 3rem;
}

#generateData:hover {
    background-color: green;
}


#resetData:hover {
    background-color: green;
}

.button {
    background-color: #0074d9;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-family: inherit;
}

.notification {
    display: none;
    color: red;
    font-size: 3rem;
    position: absolute;
    top: 16rem;
    right: 5rem;
    left: 5rem;
}


#downloadLink {
    background-color: #000000;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin: 2rem auto;
    font-size: 1.5rem;
}

#downloadLink:hover {
    background-color: green;
}

#dataAmountContainer {
    /* display: none; */
}

.input-container {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    flex-wrap: wrap;
    text-align: center;
    margin: 2rem 0;
}

.input {
    font-size: 1em;
    padding: 0.6em 1em;
    border: none;
    border-radius: 6px;
    background-color: #f8f8f8;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: background-color 0.3s ease, box-shadow 0.3s ease;
    max-width: 50%;
    color: #333;
    margin: 0 auto;
    text-align: center;
}

.input:hover {
    background-color: #f2f2f2;
}

.input:focus {
    outline: none;
    background-color: #fff;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.input::placeholder {
    color: #999;
}

.highlight {
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 2px;
    background-color: #6c63ff;
    transition: width 0.3s ease;
}

.input:focus+.highlight {
    width: 55.5%;
}

/* Optional: Animation on focus */
@keyframes input-focus {
    from {
        transform: scale(1);
        box-shadow: 0 0 0 rgba(0, 0, 0, 0.1);
    }

    to {
        transform: scale(1.02);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
}

.input:focus {
    animation: input-focus 0.3s ease;
}

.container {
    cursor: pointer;
}

.container input {
    display: none;
}

.container svg {
    overflow: visible;
}

.path {
    fill: none;
    stroke: rgb(255, 255, 255);
    stroke-width: 6;
    stroke-linecap: round;
    stroke-linejoin: round;
    transition: stroke-dasharray 0.5s ease, stroke-dashoffset 0.5s ease;
    stroke-dasharray: 241 9999999;
    stroke-dashoffset: 0;
}

.container input:checked~svg .path {
    stroke-dasharray: 70.5096664428711 9999999;
    stroke-dashoffset: -262.2723388671875;
}

#output {
    position: relative;
}

.datas {
    transition: transform 0.3s ease;
    float: right;
    width: 70%;
    /* padding: 10px; */
    box-sizing: border-box;
    position: relative;
}

.file-type-h1,
.notification,
.data-output {
    transition: opacity 0.3s ease;
}

#fileTypeHeading {
    font-family: 'poppins', sans-serif;
    font-size: 1.2rem;
    margin: 0rem 2rem;
    position: absolute;
    top: 2.5px;
    letter-spacing: 2px;
}

.data-output {
    background-color: #f0f0f0;
    color: #000;
    padding: 2rem;
    border: 1px solid #ccc;
    /* margin: 1rem 2rem; */
    border-radius: 5px;
    font-size: .7rem;
    display: none;
}

#refreshButtonContainer {
    position: absolute;
    top: 6px;
    right: .7rem;
}

.refresh-button {
    color: #000000;
    font-size: 1.3rem;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    display: none;
    transition: .5s ease-in-out;
}

.refresh-button:hover {
    transform: scale(1.3);
}



/* Style for radio buttons */
input[type="radio"] {
    margin-right: 5px;
}

/* Style for labels associated with radio buttons */
label[for="csv"],
label[for="xml"],
label[for="json"] {
    font-weight: bold;
}

.file-type-h1 {
    font-size: 1.5rem;
    color: #0074d9;
    margin-top: 1rem;
}

.file {
    display: flex;
    align-items: center;
    gap: .5rem;
}

/* Hide the default checkbox */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

.container {
    display: block;
    position: relative;
    cursor: pointer;
    font-size: 20px;
    user-select: none;
}

/* Create a custom checkbox */
.checkmark {
    position: relative;
    top: 0;
    left: 0;
    height: 1rem;
    width: 1rem;
    background-color: #ccc;
    border-radius: 50%;
    transition: .4s;
}

.checkmark:hover {
    box-shadow: inset 17px 17px 16px #b3b3b3,
        inset -17px -17px 16px #ffffff;
}

/* When the checkbox is checked, add a blue background */
.container input:checked~.checkmark {
    box-shadow: none;
    background-color: limegreen;
    transform: rotateX(360deg);
}

.container input:checked~.checkmark:hover {
    box-shadow: 3px 3px 3px rgba(0, 0, 0, 0.2);
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
}

/* Show the checkmark when checked */
.container input:checked~.checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
    left: 0.96em;
    top: 0.7em;
    width: 0.25em;
    height: 0.5em;
    border: solid white;
    border-width: 0 0.15em 0.15em 0;
    box-shadow: 0.1em 0.1em 0em 0 rgba(0, 0, 0, 0.3);
    transform: rotate(45deg);
}